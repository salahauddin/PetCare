//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PAWFETNEW.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class petcareEntities : DbContext
    {
        public petcareEntities()
            : base("name=petcareEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<animals1> animals1 { get; set; }
        public virtual DbSet<Tbl_Adoption> Tbl_Adoption { get; set; }
        public virtual DbSet<Tbl_DayCare> Tbl_DayCare { get; set; }
        public virtual DbSet<Tbl_Doctor> Tbl_Doctor { get; set; }
        public virtual DbSet<Tbl_Donation> Tbl_Donation { get; set; }
        public virtual DbSet<Tbl_MedicalAssistance> Tbl_MedicalAssistance { get; set; }
        public virtual DbSet<Tbl_Pets> Tbl_Pets { get; set; }
        public virtual DbSet<Tbl_Service> Tbl_Service { get; set; }
        public virtual DbSet<Tbl_User> Tbl_User { get; set; }
        public virtual DbSet<Tbl_Service_Offered> Tbl_Service_Offered { get; set; }
    
        public virtual int adoption(Nullable<int> user_id, Nullable<int> pet_id, Nullable<System.DateTime> date)
        {
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(int));
    
            var pet_idParameter = pet_id.HasValue ?
                new ObjectParameter("pet_id", pet_id) :
                new ObjectParameter("pet_id", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("adoption", user_idParameter, pet_idParameter, dateParameter);
        }
    
        public virtual int amount(Nullable<int> id, Nullable<int> amount)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("amount", idParameter, amountParameter);
        }
    
        public virtual int medical(Nullable<int> user_id, string problem, Nullable<System.DateTime> date, Nullable<int> id)
        {
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(int));
    
            var problemParameter = problem != null ?
                new ObjectParameter("problem", problem) :
                new ObjectParameter("problem", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("medical", user_idParameter, problemParameter, dateParameter, idParameter);
        }
    
        public virtual ObjectResult<proname_Result> proname()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proname_Result>("proname");
        }
    
        public virtual int service(Nullable<int> userid, Nullable<int> serviceid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var serviceidParameter = serviceid.HasValue ?
                new ObjectParameter("serviceid", serviceid) :
                new ObjectParameter("serviceid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("service", useridParameter, serviceidParameter);
        }
    
        public virtual int taken(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("taken", idParameter);
        }
    
        public virtual ObjectResult<Tbl_DayCare_revenue_Result> Tbl_DayCare_revenue(string start_date, string end_date)
        {
            var start_dateParameter = start_date != null ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(string));
    
            var end_dateParameter = end_date != null ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Tbl_DayCare_revenue_Result>("Tbl_DayCare_revenue", start_dateParameter, end_dateParameter);
        }
    
        public virtual ObjectResult<string> Tbl_Doctor_adoption(string start_date, string end_date)
        {
            var start_dateParameter = start_date != null ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(string));
    
            var end_dateParameter = end_date != null ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Tbl_Doctor_adoption", start_dateParameter, end_dateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Tbl_Doctor_revenue(string start_date, string end_date)
        {
            var start_dateParameter = start_date != null ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(string));
    
            var end_dateParameter = end_date != null ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Tbl_Doctor_revenue", start_dateParameter, end_dateParameter);
        }
    
        public virtual ObjectResult<string> Tbl_Donation_revenue(string start_date, string end_date)
        {
            var start_dateParameter = start_date != null ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(string));
    
            var end_dateParameter = end_date != null ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Tbl_Donation_revenue", start_dateParameter, end_dateParameter);
        }
    }
}
